name: Tests, build and terraform plan

on:
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    name: Run PHPUnit tests
    runs-on: ubuntu-latest
    needs: Build-image
    defaults:
      run:
        working-directory: ./code
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and run Docker containers
        run: docker-compose up -d

      - name: Wait for containers to start
        run: sleep 30

      - name: Install dependencies
        run: docker exec $(docker-compose ps -q php) sh -c "composer install"

      - name: Run PHPUnit tests
        run: docker exec $(docker-compose ps -q php) sh -c "php vendor/bin/phpunit test"

  Build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get current timestamp
        id: timestamp
        run: echo "::set-output name=TIMESTAMP::$(date +%Y%m%d%H%M%S)"

      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: false
          load: true
          tags: |
            dcristobal/pokemon-app:latest
            dcristobal/pokemon-app:${{ steps.timestamp.outputs.TIMESTAMP }}
      # Scan image
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "dcristobal/pokemon-app:${{ steps.timestamp.outputs.TIMESTAMP }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

  Diff-helmfile:
    name: "Diff Helmfile"
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Helm
        working-directory: /tmp
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Install Helmfile
        working-directory: /tmp
        run: |
          wget https://github.com/helmfile/helmfile/releases/download/v0.159.0/helmfile_0.159.0_linux_amd64.tar.gz
          tar -xvf helmfile_0.159.0_linux_amd64.tar.gz helmfile
          rm helmfile_0.159.0_linux_amd64.tar.gz
          mv helmfile /usr/local/bin/

      - name: Install helm diff plugin
        run: helm plugin install https://github.com/databus23/helm-diff

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: kubeconfig

      - name: Create kubeconfig directory
        run: mkdir -p ~/.kube

      - name: Move kubeconfig to default location
        run: mv kubeconfig ~/.kube/config

      - name: Diff Helmfile staging
        run: helmfile -e ${environment} diff
        env:
          environment: staging
          TIMESTAMP: 0.0.1
        working-directory: ./helmfile

      - name: Diff Helmfile production
        run: helmfile -e ${environment} diff
        env:
          environment: production
          TIMESTAMP: 0.0.1
        working-directory: ./helmfile

  terraform:
    name: "Terraform Infrastructure"
    runs-on: ubuntu-latest
    env:
      # Credentials for deployment to CIVO
      TF_VAR_civo_token: ${{ secrets.TF_VAR_CIVO_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      TF_VAR_flux_github_token: ${{ secrets.TF_VAR_FLUX_GITHUB_TOKEN }}
    defaults:
      run:
        shell: bash
        # We keep Terraform files in the infra directory.
        working-directory: ./infra

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v3

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      - name: Terraform init
        id: init
        run: terraform init -upgrade

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false
